<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_debug</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parent_debug_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
event_inherited()

/// toggle resolution

// called in the first room of the games creation code
// ^^ initialises the games room settings for scaling (16:9 ratio)

num += 1

if num = 5 // native - adaptable
{
    base_w = display_get_width()
    base_h = display_get_height()
}

if num = 4 // default 16:9
{
    base_w = 1024
    base_h = 576
}

if num = 3 // iphone X and up 19.5:9
{
    base_w = 2436 / 2 // dividing so it can fit on my screen
    base_h = 1125 / 2
}

if num = 1 // old devices 3:2
{
    base_w = 960
    base_h = 640
}

if num = 2 // iPad/tablet 4:3
{
    base_w = 1024
    base_h = 768
}


// show_message(string(num)+" = "+string(base_w)+"x"+string(base_h)) // debug
text = 'Display ' + string(num) + ' (' + string(WIDTH) + 'x' + string(HEIGHT) + ')'

if num == 5 {num = 0}

surface_resize(application_surface, base_w, base_h)

window_set_size(base_w, base_h) // temp - windows only

// this centers the view of the room for any given room_size / ratio size
offset_x = (room_width - base_w) / 2 
offset_y = (room_height - base_h) / 2

view_enabled = true
view_visible[0] = true

view_xport[0] = 0
view_yport[0] = 0
view_wport[0] = base_w
view_hport[0] = base_h

view_xview[0] = offset_x
view_yview[0] = offset_y
view_wview[0] = base_w
view_hview[0] = base_h

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
event_inherited()

image_index = 2
num = 0

text = 'Display (' + string(WIDTH) + 'x' + string(HEIGHT) + ')'

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
