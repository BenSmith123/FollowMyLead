<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise everything, create a player

//if IS_MOBILE
instance_create(0,0,obj_pause_button)
instance_create(0,0,obj_next_step)
instance_create(0,0,obj_button_auto_target)

if global.debug_performance {show_debug_overlay(true)}

global.counter = 1 // counter for recorded players to use
MAX_ARRAY_SIZE = 3600

/* clear the player array
for (i = 20; i &lt;= 20; i++)
{
    global.player_array[i] = 0
} **************/

global.player_number = 0

//instance_create(x,y,obj_background)

// set the spawn globals depending on where the player spawn object is
global.player_spawn_x = obj_spawn_point.x
global.player_spawn_y = obj_spawn_point.y
with (obj_spawn_point) instance_destroy() // destroy the object, SAVE MEMORY

instance_create(global.player_spawn_x,global.player_spawn_y,obj_player_current) // create first player object


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// counting!

if global.counter != MAX_ARRAY_SIZE
{global.counter++}
else
{
    if instance_exists(obj_player_current)
    {instance_destroy(obj_player_current)}
    
    //scr_next_iteration() // automatically go to next iteration
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// center camera on first player

if instance_exists(obj_player_current)
{
    obj = obj_player_current

    // if player is not too close to room edge (stops camera from going outside room)
    if not(view_xview[0] &lt;= 0 and obj.x&lt;WIDTH/1.5) and not(view_xview[0]+WIDTH &gt;= room_width and obj.x &gt; room_width-(WIDTH/2)) // x
    {
        if not(view_yview[0] &lt;= 0 and obj.y&lt;HEIGHT/1.5) and not(view_yview[0]+HEIGHT &gt;= room_height and obj.y &gt; room_height-(HEIGHT/2)) // y
        {
            // center the camera on the player
            view_xview[0] = obj.x - (WIDTH / 2)
            view_yview[0] = obj.y - (HEIGHT / 2)
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// debug 

if global.debug_performance
{
    scr_text1()
    draw_set_halign(fa_right)
    
    draw_text(WIDTH-20,80,"Cycle time: "+string(fps))
    
    draw_text(WIDTH-20,100,"FPS: "+string(fps_real))
    
}


if global.debug = true
{  
    scr_text1() 
    
    
    draw_text(20,15,"Counter: "+string(global.counter))
    
    // loop through the error message array and display all strings
    for(i = 0; i &lt; global.error_log_size; i++)
    {
        draw_text(20,45+(i*20),"["+string(i)+"] "+ string(global.error_msg[i]))
    }

    /*
    draw_text(x2,80,"
    F12 = Restart Game
    &lt;I&gt; = Toggle debug mode
    &lt;P&gt; = Final playthrough
    &lt;SHIFT&gt; Next iteration
    
    --- Controls ---
    ASDW / Arrow key movement
    Space / left-click to shoot
    ")
    */

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_next_iteration</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
